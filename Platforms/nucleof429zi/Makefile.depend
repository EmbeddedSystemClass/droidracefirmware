LIBNP2=libnp2.a

CC=arm-none-eabi-gcc
AR=arm-none-eabi-ar
OBJCOPY=arm-none-eabi-objcopy

CPUFLAGS ?= -mlittle-endian -mthumb -mcpu=cortex-m4 -mthumb-interwork
LDFLAGS = $(CPUFLAGS) -T$(PLATFORM_PATH)/STM32F429ZITx_FLASH.ld

CFLAGS  = -g -O1 -Wmaybe-uninitialized -Wextra -std=gnu99 -Wsign-compare
CFLAGS += $(CPUFLAGS)

LD_SYS_LIBS = -lm -lc -lgcc -lnosys

STARTUP = $(PLATFORM_PATH)/startup_stm32f429xx.s

# Variables for making this Makefile slightly easier to handle
EPIC_PATH=../../
HAL_PATH=$(EPIC_PATH)/Core/STM32F4xx_HAL_Driver
CMSIS_PATH=$(EPIC_PATH)/Core/CMSIS
FREERTOS_PATH=$(EPIC_PATH)/Core/FreeRTOS/Source
LWIP_PATH=$(EPIC_PATH)/Core/LwIP
PLATFORM_PATH=$(EPIC_PATH)/Platforms/nucleof429zi
PLATFORM_NET_PATH=$(PLATFORM_PATH)/net
TINYPRINTF_PATH=$(EPIC_PATH)/Core/tinyprintf
CLI_PATH=$(EPIC_PATH)/Core/FreeRTOS-Plus/Source/FreeRTOS-Plus-CLI

###################################################
#	    These flags CAN change		  #
###################################################
CFLAGS += -DSTM32F429xx -DENABLE_DEBUGGER_UART -DENABLE_ETHERNET #-DUSE_DHCP
CFLAGS += -I$(CMSIS_PATH)/Include -I$(HAL_PATH)/Inc -I.
CFLAGS += -I$(FREERTOS_PATH)/include -I$(FREERTOS_PATH)/portable/GCC/ARM_CM4F
CFLAGS += -I$(FREERTOS_PATH)/CMSIS_RTOS
CFLAGS += -I$(PLATFORM_PATH)
CFLAGS += -I$(LWIP_PATH)/src/include -I$(LWIP_PATH)/src/include/lwip -I$(LWIP_PATH)/src/include/ipv4 -I$(LWIP_PATH)/src/include/ipv6 -I$(LWIP_PATH)/system/OS
CFLAGS += -I$(TINYPRINTF_PATH)
CFLAGS += -I$(CLI_PATH)
CFLAGS += -I$(PLATFORM_NET_PATH)

# Source files
LIBSRCS += $(wildcard $(HAL_PATH)/Src/*.c)
LIBSRCS += $(wildcard $(PLATFORM_PATH)/*.c)
LIBSRCS += $(wildcard $(FREERTOS_PATH)/*.c) $(wildcard$(FREERTOS_PATH)/portable/GCC/ARM_CM4F/*.c) $(wildcard$(FREERTOS_PATH)/portable/MemMang/heap_4.c)
LIBSRCS += $(wildcard $(FREERTOS_PATH)/CMSIS_RTOS/*.c)
LIBSRCS += $(wildcard $(LWIP_PATH)/src/core/*.c) $(wildcard $(LWIP_PATH)/src/api/*.c) $(wildcard $(LWIP_PATH)/src/core/ipv4/*.c) $(wildcard $(LWIP_PATH)/src/netif/*.c) $(wildcard $(LWIP_PATH)/system/OS/*.c)
LIBSRCS += $(wildcard $(PLATFORM_NET_PATH)/*.c)
LIBSRCS += $(wildcard $(CLI_PATH)/*.c)
LIBSRCS += $(wildcard $(TINYPRINTF_PATH)/*.c)

OBJDIR = obj
LIBOBJ = $(addprefix $(OBJDIR)/, $(notdir $(LIBSRCS:%.c=%.o)))
LIBOBJAS = $(addprefix $(OBJDIR)/, $(notdir $(STARTUP:%.s=%.o)))

NP2OBJ = $(LIBOBJ) $(LIBOBJAS)

obj/%.o:
	@echo "Building $^"
	@$(CC) $(CFLAGS) -c $^ -o $@

obj/startup_stm32f429xx.o: $(STARTUP)
	$(CC) $(CFLAGS) -c $(STARTUP) -o $@

define make-deps
$(OBJDIR)/$(notdir $(1:%.c=%.o)): $1
endef

$(foreach d, $(LIBSRCS), $(eval $(call make-deps,$d)))
#
# # Startup File
# SRCS += $(PLATFORM_PATH)/startup_stm32f429xx.s
#
# # Output file names
# OBJS = $(SRCS:.c=.o)
#
# ###################################################
# .PHONY: lib proj
#
# all: proj
#
# install: clean all proge
#
# lib:
# 	$(MAKE) -C lib
#
# proj: 	$(PROJ_NAME).elf
#
# $(PROJ_NAME).elf: $(SRCS)
# 	$(CC) $(CFLAGS) $^ -o $@ -Llib -lm -lc -lgcc -lnosys #-lstm32f4
# 	$(OBJCOPY) -O ihex $(PROJ_NAME).elf $(PROJ_NAME).hex
# 	$(OBJCOPY) -O binary $(PROJ_NAME).elf $(PROJ_NAME).bin
#
# prog:
# 	st-flash write $(PROJ_NAME).bin 0x8000000
#
# clean:
# 	rm -f *.o
# 	rm -f $(PROJ_NAME).elf
# 	rm -f $(PROJ_NAME).hex
# 	rm -f $(PROJ_NAME).bin
